<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PARAMETER_IS_GENERIC" xml:space="preserve">
    <value>Parameter should not be generic.</value>
  </data>
  <data name="CIRCULAR_REFERENCE" xml:space="preserve">
    <value>Circular reference: {0}.</value>
  </data>
  <data name="CONSTRUCTOR_OVERLOADING_NOT_SUPPORTED" xml:space="preserve">
    <value>"{0}" must have exactly one (annotated) public constructor.</value>
  </data>
  <data name="INVALID_DEPENDENCY" xml:space="preserve">
    <value>Invalid dependency.</value>
  </data>
  <data name="PARAMETER_NOT_A_CLASS" xml:space="preserve">
    <value>Parameter must be a class.</value>
  </data>
  <data name="NOT_PRODUCIBLE" xml:space="preserve">
    <value>The service has no factory function.</value>
  </data>
  <data name="STRICT_DI_DEP" xml:space="preserve">
    <value>Attempt to request a dependency that should live shorter than the requestor should.</value>
  </data>
  <data name="NOT_EQUAL" xml:space="preserve">
    <value>The given values are not equal.</value>
  </data>
  <data name="NOT_NULL" xml:space="preserve">
    <value>The value of "{0}" should be null.</value>
  </data>
  <data name="IS_NULL" xml:space="preserve">
    <value>The value of "{0}" cannot be null.</value>
  </data>
  <data name="BUILT_IN_SERVICE_OVERRIDE" xml:space="preserve">
    <value>Built in services cannot be overridden.</value>
  </data>
  <data name="INJECTOR_IS_BEING_DISPOSED" xml:space="preserve">
    <value>Injector cannot be invoked when it is about to dispose.</value>
  </data>
  <data name="SERVICE_NOT_FOUND" xml:space="preserve">
    <value>Service "{0}" could not be found.</value>
  </data>
  <data name="STRICT_DI_SCOPE" xml:space="preserve">
    <value>Attempt to request the scope itself.</value>
  </data>
  <data name="INVALID_CONFIG" xml:space="preserve">
    <value>Invalid configuration.</value>
  </data>
  <data name="LAMBDA_LAYOUT_NOT_SUPPORTED" xml:space="preserve">
    <value>Layout not supported.</value>
  </data>
  <data name="REQUEST_NOT_REPLACEABLE" xml:space="preserve">
    <value>Only request targeting IInstanceFactory can be replaced.</value>
  </data>
  <data name="NOT_AN_INTERCEPTOR" xml:space="preserve">
    <value>Interceptor ("{0}") shall implement the IInterfaceInterceptor interface.</value>
  </data>
  <data name="INVALID_CAST" xml:space="preserve">
    <value>The service to be returned must implement the "{0}" interface.</value>
  </data>
  <data name="SERVICE_ALREADY_REGISTERED" xml:space="preserve">
    <value>A service with the same ID has already been registered.</value>
  </data>
  <data name="COLLECTION_IS_READONLY" xml:space="preserve">
    <value>Collection is readonly.</value>
  </data>
</root>