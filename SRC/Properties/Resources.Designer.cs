//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solti.Utils.DI.Properties {
    using System.Reflection;
    using Internals;

    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
#if DEBUG
    [ExcludeFromCoverage]
#endif
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Solti.Utils.DI.Properties.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is already registered..
        /// </summary>
        internal static string ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instantiating open generic types are not allowed..
        /// </summary>
        internal static string CANT_INSTANTIATE_GENERICS {
            get {
                return ResourceManager.GetString("CANT_INSTANTIATE_GENERICS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating proxy is not allowed here..
        /// </summary>
        internal static string CANT_PROXY {
            get {
                return ResourceManager.GetString("CANT_PROXY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular reference: {0}..
        /// </summary>
        internal static string CIRCULAR_REFERENCE {
            get {
                return ResourceManager.GetString("CIRCULAR_REFERENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public constructor with the given layout can not be found..
        /// </summary>
        internal static string CONSTRUCTOR_NOT_FOUND {
            get {
                return ResourceManager.GetString("CONSTRUCTOR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; must have exactly one (annotated) public constructor..
        /// </summary>
        internal static string CONSTRUCTOR_OVERLOADING_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("CONSTRUCTOR_OVERLOADING_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The injector can not hold more than {0} transient services. It usually indicates that you were recycling the injector..
        /// </summary>
        internal static string INJECTOR_SHOULD_BE_RELEASED {
            get {
                return ResourceManager.GetString("INJECTOR_SHOULD_BE_RELEASED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolver does not support the given interface: {0}..
        /// </summary>
        internal static string INTERFACE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("INTERFACE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All constructor arguments must be an interface/Lazy&lt;interface&gt;..
        /// </summary>
        internal static string INVALID_CONSTRUCTOR {
            get {
                return ResourceManager.GetString("INVALID_CONSTRUCTOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non interface/Lazy&lt;interface&gt;arguments must be specified as an explicit argument..
        /// </summary>
        internal static string INVALID_CONSTRUCTOR_ARGUMENT {
            get {
                return ResourceManager.GetString("INVALID_CONSTRUCTOR_ARGUMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Injector must not contain abstract service entries..
        /// </summary>
        internal static string INVALID_INJECTOR_ENTRY {
            get {
                return ResourceManager.GetString("INVALID_INJECTOR_ENTRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The returned object must be an instance of &quot;{0}&quot;..
        /// </summary>
        internal static string INVALID_INSTANCE {
            get {
                return ResourceManager.GetString("INVALID_INSTANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interceptor must be an InterfaceInterceptor&lt;{0}&gt; descendant..
        /// </summary>
        internal static string INVALID_INTERCEPETOR {
            get {
                return ResourceManager.GetString("INVALID_INTERCEPETOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Child must have the same parent on which the operation was perfomred..
        /// </summary>
        internal static string INVALID_PARENT {
            get {
                return ResourceManager.GetString("INVALID_PARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter must be a class..
        /// </summary>
        internal static string NOT_A_CLASS {
            get {
                return ResourceManager.GetString("NOT_A_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter must be an interface..
        /// </summary>
        internal static string NOT_AN_INTERFACE {
            get {
                return ResourceManager.GetString("NOT_AN_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given interface ({0}) is not assignable from the implementation ({1})..
        /// </summary>
        internal static string NOT_ASSIGNABLE {
            get {
                return ResourceManager.GetString("NOT_ASSIGNABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Child already has parent..
        /// </summary>
        internal static string NOT_ORPHAN {
            get {
                return ResourceManager.GetString("NOT_ORPHAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service has no factory function..
        /// </summary>
        internal static string NOT_PRODUCIBLE {
            get {
                return ResourceManager.GetString("NOT_PRODUCIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No registered implementation for &quot;{0}&quot;..
        /// </summary>
        internal static string SERVICE_NOT_FOUND {
            get {
                return ResourceManager.GetString("SERVICE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A composite entity can not have more than {0} children..
        /// </summary>
        internal static string TOO_MANY_CHILDREN {
            get {
                return ResourceManager.GetString("TOO_MANY_CHILDREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown lifetime: {0}..
        /// </summary>
        internal static string UNKNOWN_LIFETIME {
            get {
                return ResourceManager.GetString("UNKNOWN_LIFETIME", resourceCulture);
            }
        }
    }
}
